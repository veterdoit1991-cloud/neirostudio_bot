from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes
import os

TOKEN = os.getenv("BOT_TOKEN")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üì∏ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ", callback_data="generate")],
        [InlineKeyboardButton("üßç‚Äç‚ôÄÔ∏è –ú–æ–∏ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å—ã", callback_data="refs")],
        [InlineKeyboardButton("üé® –°—Ç–∏–ª—å / –°–µ–∑–æ–Ω", callback_data="style")]
    ]
    await update.message.reply_text(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Ellen Neiro Studio (ENS)!",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

async def button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    if query.data == "generate":
        await query.edit_message_text("–û—Ç–ø—Ä–∞–≤—å –ø—Ä–æ–º—Ç –∏–ª–∏ —Ñ–æ—Ç–æ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (–¥–µ–º–æ-—Ä–µ–∂–∏–º üí´)")
    elif query.data == "refs":
        await query.edit_message_text("–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å 3 —Ñ–æ—Ç–æ-—Ä–µ—Ñ–µ—Ä–µ–Ω—Å–∞ üßç‚Äç‚ôÄÔ∏è")
    elif query.data == "style":
        await query.edit_message_text("–í—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å / —Å–µ–∑–æ–Ω: –≤–µ—Å–Ω–∞, –ª–µ—Ç–æ, –æ—Å–µ–Ω—å –∏–ª–∏ –∑–∏–º–∞ üé®")

app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CallbackQueryHandler(button))

if __name__ == "__main__":
    app.run_polling()
